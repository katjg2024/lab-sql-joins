-- 1. List the number of films per category.
-- 2. Retrieve the store ID, city, and country for each store.
-- 3. Calculate the total revenue generated by each store in dollars.
-- 4. Determine the average running time of films for each category.

USE sakila;

SELECT c.name, COUNT(f.film_id) AS num_of_films
FROM film_category AS fc
JOIN category AS c ON fc.category_id = c.category_id
JOIN film AS f ON fc.film_id = f.film_id
GROUP BY c.name;

-- 2. Retrieve the store ID, city, and country for each store.
SELECT s.store_id, c.city, co.country
FROM store AS s
JOIN address AS a 
ON s.address_id = a.address_id
JOIN city AS c ON a.city_id = c.city_id
JOIN country AS co ON c.country_id = co.country_id;


-- 3. Calculate the total revenue generated by each store in dollars.
SELECT s.store_id, CONCAT('$', FORMAT(SUM(p.amount), 2)) AS total_revenue
FROM sakila.store s
JOIN sakila.staff ss
ON s.store_id = ss.store_id
JOIN sakila.payment p
ON p.staff_id = ss.staff_id
GROUP BY store_id;

-- 4. Determine the average running time of films for each category.
SELECT c.name, ROUND(AVG(length),2) as 'Average Running Time'
FROM film as f
JOIN film_category AS fc
ON f.film_id = fc.film_id
JOIN category AS c
ON fc.category_id = c.category_id
GROUP BY c.name;

-- 5. Display the top 10 most frequently rented movies in descending order.
-- 6. Determine if "Academy Dinosaur" can be rented from Store 1.
-- 7. Provide a list of all distinct film titles, along with their availability status in the inventory. 
-- Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles 
-- that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."

SELECT f.title AS movie, COUNT(r.rental_id) AS rental_count
FROM film AS f
JOIN inventory AS i
ON f.film_id = i.film_id
JOIN rental AS r 
ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 10;

-- Determine if "Academy Dinosaur" can be rented from Store 1.

-- SELECT s.store_id, f.film_id, f.title, r.staff_id, i.inventory_id, r.rental_id
SELECT COUNT(*)
FROM rental AS r
JOIN inventory AS i
ON i.inventory_id = r.inventory_id
JOIN film AS f
ON f.film_id = i.film_id
JOIN store AS s
ON i.store_id = s.store_id
WHERE f.title = 'Academy Dinosaur' AND s.store_id = 1;





